[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "数理マネジメントセミナーI",
    "section": "",
    "text": "1 はじめに\nこれは、高知工科大学 経済・マネジメント学群で開講されている「数理マネジメントセミナーI」（2023年度2学期）のうち、矢内勇生 担当分の講義用資料である。"
  },
  {
    "objectID": "index.html#sec-basicinfo",
    "href": "index.html#sec-basicinfo",
    "title": "数理マネジメントセミナーI",
    "section": "1.1 基本情報",
    "text": "1.1 基本情報\n\nシラバス（講義要項）：PDF"
  },
  {
    "objectID": "index.html#授業計画",
    "href": "index.html#授業計画",
    "title": "数理マネジメントセミナーI",
    "section": "1.2 授業計画",
    "text": "1.2 授業計画\n\n第1回から第3回まで（小林豊先生ご担当）の資料はこちら\n\n\n\n\n\n日付（すべて月曜2限）\n内容\nウェブ資料\n\n\n\n\n第4回\n11月13日\nMarkdown入門\nMarkdownを用いた文章作成\n\n\n第5回\n11月20日\nLaTeX入門\nLaTeX入門\n\n\n第6回\n12月11日\nLaTeX応用\nOverleaf の使い方\n\n\n第7回\n12月25日\n総括\nまとめ"
  },
  {
    "objectID": "markdown.html#markdown-とは",
    "href": "markdown.html#markdown-とは",
    "title": "2  Markdown",
    "section": "2.1 Markdown とは",
    "text": "2.1 Markdown とは\nMarkdown（マークダウン）は、文書を作成するために使われる軽量マークアップ言語の1つである。最もよく知られたマークアップ言語として、ウェブサイトなどの作成に使われるHTML (HyperText Markup Language) があるが、HTMLは（難しくはないが）自力で書くのはやや面倒である。面倒なMarkupをより簡単にしようというのがMarkddownである。\n例えば、ここに高知工科大学の公式サイトへのリンクを貼ることにしよう。 HTMLを使うと、「aタグ」と呼ばれるものを使って次のように書くことができる。\n&lt;a href=\"https://www.kochi-tech.ac.jp/\" target=\"_blank\"&gt;高知工科大学&lt;/a&gt;\nそれに対し、Markdownでは、\n[高知工科大学](https://www.kochi-tech.ac.jp/)\nと書くことができる。実際のリンクは 高知工科大学 のようになる。\nMicrosoft Word と異なり、Markdown で書いた文書はVS Code などのテキストエディタで編集できるのでファイルの受け渡しにも便利（相手がWordを持っていなくてもOK）である。\nファイルの編集が完了し、文書として提出・公開するときは、Markdown からHTMLやPDF（あるいはWord）の文書に変換する。この文書（いま皆さんが読んでいるコレ！）は、Markdownを使って書いたファイルからHTMLに変換されてウェブ上に公開されたものである。\n今後、コンピュータを使って簡単な文書を作成する際には Markdown を使う習慣を付けると良いだろう。Markdownを使いこなせるようになると、\n\nレポートの作成\nプレゼンテーション用のスライドの作成\n卒業論文の執筆（卒論の執筆に使うのは、R Markdown あるいは Quarto Markdown というMarkdown ベースの文書）\n\nなどができるようになる。"
  },
  {
    "objectID": "markdown.html#練習",
    "href": "markdown.html#練習",
    "title": "2  Markdown",
    "section": "2.2 練習",
    "text": "2.2 練習\n\n2.2.1 Markdown ファイルの準備\nMarkdownを使った文書を作ってみよう。\nまず、ターミナルを使ってホームディレクトリにseminar1という名前のディレクトリを作る（既に同じ名前のディレクトリがあるなら、これは実行しなくてよい）。\n$ mkdir ~/seminar1\n次に、seminar1 ディレクトリに移動して、ディレクトリ内に練習用のMarkdownファイルを作るう。Markdownファイルの拡張子は .md である。\n$ cd ~/seminar1\n$ touch exercise4.md\n新たに作った空のMarkdownファイルをVS Code で開く。\n$ code exercise4.md\n以降の作業はVS Code 上で行う。\n\n\n2.2.2 Markdown を使ってみよう\nMarkdown文法の基本 を参考に、構造化された文書を作ってみよう！\n\n見出しを作る\n段落を作る\n箇条書き\n\n番号なしの箇条書き\n番号付きの箇条書き\n\n文字の強調\nリンクを貼る\n表の作成\n画像の挿入"
  },
  {
    "objectID": "markdown.html#第4回の課題",
    "href": "markdown.html#第4回の課題",
    "title": "2  Markdown",
    "section": "2.3 第4回の課題",
    "text": "2.3 第4回の課題\n課題1（小林先生に提出した課題）を、Markdownを利用して綺麗な文書に整理し直して提出しなさい。その際、以下の5つの条件を満たすように文書を作成すること。\n\n文書のタイトル（第1レベルの見出し）は「数理セミナーI：課題4」にする（カギカッコは不要）\nタイトルの下に、氏名、学籍番号、文書の作成日を記す。\n各項目（1, 2, 3）に第2レベルの見出し（節タイトル）を付ける\n項目1は、箇条書きに変更する。\n項目2と項目3については、強調したい部分を太字にする。\n\n\n提出期限：2023年11月18日（土）午後10時（日本時間）\n提出方法：ファイルをメールに添付して担当教員に送信する\n\nメールの題名：「数理セミナー1の課題4」\n提出するファイルは以下の2つ（以下のファイル名のStudentID の部分は自分の学籍番号に置き換えること。例：kadai4_1270999.md）\n\nkadai4_StudentID.md\nkadai4_StudentID.pdf"
  },
  {
    "objectID": "latex.html#latex-とは",
    "href": "latex.html#latex-とは",
    "title": "3  LaTeX 入門",
    "section": "3.1 LaTeX とは",
    "text": "3.1 LaTeX とは\nLaTeX（読み：“lay-tech”’ または「らてふ」）とは、文字ベースの組版処理システムである。 ものすごく単純化すると、綺麗にフォーマットされた文書を作成するためのツールである。特に、電子ファイル上で見た目が美しい数式を書くためには欠かせないものであり、経済学分野の論文（数式をたくさん使う！）執筆でよく利用されている。さらに、数学の教材を作成するためにも広く利用されている。\n数理マネジメント専攻に進む（あるいは数学の教員免許を取得する）予定なら、使えるようになっておいたほうがよいだろう。そのような予定がなくても、LaTeXの書き方を知っているとそれを他の場面で流用できる（まさにそれについて今回説明する）ので、基本を身に付けておくと、役に立つことがあるかもしれない。"
  },
  {
    "objectID": "latex.html#markdown-でlatex記法の数式を書く",
    "href": "latex.html#markdown-でlatex記法の数式を書く",
    "title": "3  LaTeX 入門",
    "section": "3.2 Markdown でLaTeX記法の数式を書く",
    "text": "3.2 Markdown でLaTeX記法の数式を書く\nLaTeXの記法を利用すると、Markdown文書に数式を書くことができる。以下、その書き方を説明する。\n文の中に数式を入れたいときは、数式を書くためのコードを$で挟み、文中に挿入する。 例えば、単純な足し算は $1 + 3 = 4$ と書くことで、\\(1 + 3 = 4\\) と表示される。あるいは、$Y_i = \\beta_0 + \\beta_1 X_i + \\varepsilon_i$ と書けば、\\(Y_i = \\beta_0 + \\beta_1 X_i + \\varepsilon_i\\) となる。\n数式を独立した行に表示したいときは、以下のようにする。\n$$\n\\bar{x} = \\frac{1}{N} \\sum_{n=1}^N x_n\n$$\nこれは、次のように表示される。 \\[\n\\bar{x} = \\frac{1}{N} \\sum_{n=1}^N x_n\n\\]\n文中に和の記号を書くと、例えば $\\bar{x} = \\frac{1}{N} \\sum_{n=1}^N x_n$ と書くと、\\(\\bar{x} = \\frac{1}{N} \\sum_{n=1}^N x_n\\)と表示される。上で示した独立した数式と比べると、和の記号の上下にある文字の位置が変わっており、分数は縦方向につぶれていることがわかる。これは、そうしないと文と数式の高さが大きく異なってしまうためである。文中でも無理やり独立した数式と同じような表示にしたいときは\\displaystyle という命令を使い、$\\displaystyle \\bar{x} = \\frac{1}{N} \\sum_{n=1}^N x_n$とすれば、\\(\\displaystyle \\bar{x} = \\frac{1}{N} \\sum_{n=1}^N x_n\\) となる。\n複数行にわたる数式を書きたいときは、aligned 環境を使って以下のように書くことができる。\n$$\n\\begin{aligned}\n  \\bar{x} \n   &= \\frac{1}{N} \\sum_{n=1}^N x_n \\\\\n   &= \\frac{1}{N} \\left(x_1 + x_2 + \\cdots + x_N \\right)\n  \\end{aligned}\n$$\n上のコードでは、\\\\ で改行している。また、各行は & の位置で整列する。結果は次のようになる。 \\[\n\\begin{aligned}\n  \\bar{x}\n   &= \\frac{1}{N} \\sum_{n=1}^N x_n \\\\\n   &= \\frac{1}{N} \\left(x_1 + x_2 + \\cdots + x_N \\right)\n\\end{aligned}\n\\] 上の例からわかるとおり、分数は\\frac{分子}{分母}で書くことができる。\n数式でカッコを使うとき、() と [] はそのまま入力すればよいが、{}を使いたいときは \\{ や\\}のようにする必要がある。また、\\left( \\right) 、\\left\\{ \\right\\}、\\left[ \\right] のようにすると、カッコの中身に合わせてカッコの大きさを調節してくれる。例えば、\n$$\n(x - \\frac{1}{2})(y - \\frac{2}{\\frac{3}{31}})^2\n$$\nと入力すると、 \\[\n(x - \\frac{1}{2})(y - \\frac{2}{\\frac{3}{31}})^2\n\\] と表示されるが、\n$$\n\\left(x - \\frac{1}{2} \\right) \\left(y - \\frac{2}{\\frac{3}{31}} \\right)^2\n$$\nと入力すると、 \\[\n\\left(x - \\frac{1}{2} \\right) \\left(y - \\frac{2}{\\frac{3}{31}} \\right)^2\n\\] と、なる。\n下付きの添字は、_（アンダースコア）を使って、x_i と書くと、\\(x_i\\)のように表示される。 ただし、添字が2文字以上のときにx_23 のようにすると\\(x_23\\)となってしまうので、\\(x_{23}\\)にするためにはx_{23}とする。\n上付きの文字は、^（キャレット）を使ってx^aのように書くと、\\(x^a\\) のように表示される。 下付きの場合と同様に、2文字以上のときにはx^{a-b}のようにすると\\(x^{a-b}\\)となる。\n\n3.2.1 よく使う記号\nよく使う記号を以下に示す\n\n\n\n\n\n\n\n\nコード\n出力\n使用例\n\n\n\n\n\\times\n\\(\\times\\)\n\\(x \\times y\\)\n\n\n\\cdot\n\\(\\cdot\\)\n\\(x \\cdot y\\)\n\n\n\\cdots\n\\(\\cdots\\)\n\\(x_1 + x_2 + \\cdots + x_N\\)\n\n\n\\dots\n\\(\\dots\\)\n\\(a, b, \\dots, z\\)\n\n\n\\Pr(.)\n\\(\\Pr(.)\\)\n\\(\\Pr(X =x )\\)\n\n\n\\sum\n\\(\\sum\\)\n\\(\\sum (x_i - \\mu)^2\\)\n\n\n\\sum_{n = 1}^{N}\n\\(\\displaystyle \\sum_{n = 1}^{N}\\)\n\\(\\displaystyle \\sum_{n = 1}^{N} (x_n - \\bar{x})^2\\)\n\n\n\\prod\n\\(\\prod\\)\n\\(\\displaystyle \\prod_{j=1}^J x_j\\)\n\n\n\\sqrt{a}\n\\(\\sqrt{a}\\)\n\\(\\sqrt{xyz}\\)\n\n\n\\exp(.)\n\\(\\exp(.)\\)\n\\(\\exp(-\\lambda)\\)\n\n\n\\log(.)\n\\(\\log(.)\\)\n\\(\\log(2a)\\)\n\n\n\\partial\n\\(\\partial\\)\n\\(\\displaystyle \\frac{\\partial f(x, y)}{\\partial x}\\)\n\n\n\\int\n\\(\\int\\)\n\\(\\displaystyle \\int_{a}^b f(x) dx\\)\n\n\n\\lim\n\\(\\lim\\)\n\\(\\displaystyle \\lim_{n \\to \\infty} \\sum_{i=1}^n \\frac{1}{n!}\\)\n\n\n\\infty\n\\(\\infty\\)\n\n\n\n\\sim\n\\(\\sim\\)\n\\(X \\sim \\mbox{Normal}(\\mu, \\sigma)\\)\n\n\n\\to\n\\(\\to\\)\n\n\n\n\\binom{n}{k}\n\\(\\displaystyle \\binom{n}{k}\\)\n\\(\\displaystyle \\binom{n}{k} = \\frac{n!}{k! (n-k)!}\\)\n\n\n\\bar{x}\n\\(\\bar{x}\\)\n\n\n\n\\hat{x}\n\\(\\hat{x}\\)\n\n\n\n\\widehat{abcde}\n\\(\\widehat{abcde}\\)\n\n\n\n\\tilde{x}\n\\(\\tilde{x}\\)\n\n\n\n\n\n\n3.2.2 ギリシャ文字\nギリシャ文字も数式環境の中で使える。文章中にギリシャ文字を入れたいときは、$と$の間に以下のコードを入力する（よく使うものだけ挙げる）。\n\n\n\n文字\nコード\n\n\n\n\n\\(\\alpha\\)\n\\alpha\n\n\n\\(\\beta\\)\n\\beta\n\n\n\\(\\gamma\\)\n\\gamma\n\n\n\\(\\mu\\)\n\\mu\n\n\n\\(\\sigma\\)\n\\sigma\n\n\n\\(\\lambda\\)\n\\lambda\n\n\n\\(\\phi\\)\n\\phi\n\n\n\\(\\pi\\)\n\\pi\n\n\n\\(\\delta\\)\n\\delta\n\n\n\\(\\epsilon\\)\n\\epsilon\n\n\n\\(\\varepsilon\\)\n\\varepsilon\n\n\n\\(\\nu\\)\n\\nu\n\n\n\\(\\xi\\)\n\\xi\n\n\n\\(\\zeta\\)\n\\zeta\n\n\n\nギリシャ文字の大文字の書き方は、以下の2つのパタンに分かれる。\n\nコードの1文字目を大文字にする\n\n例）\\(\\delta\\)の大文字\\(\\Delta\\) は \\Delta\n例）\\(\\phi\\)の大文字\\(\\Phi\\) は \\Phi\n\nアルファベットの大文字をそのまま使う。\n\n例）\\(\\alpha\\)の大文字AはA\n例）\\(\\beta\\)の大文字BはB\n\n\n\n\n\n\n\n\n記号の使い分け\n\n\n\n\n和算の記号\\(\\sum\\) は\\Sigmaではなく、\\sum\n\n\\sum: \\(\\sum\\)\n\\Sigma: \\(\\Sigma\\)\n\n乗算の記号\\(\\prod\\)は\\Pi ではなく\\prod\n\n\\prod: \\(\\prod\\)\n\\Pi: \\(\\Pi\\)"
  },
  {
    "objectID": "latex.html#練習",
    "href": "latex.html#練習",
    "title": "3  LaTeX 入門",
    "section": "3.3 練習",
    "text": "3.3 練習\n各自持参した数学の教科書に載っている数式を、LaTeX記法を使ったMarkdown文書で再現してみよう！"
  },
  {
    "objectID": "latex.html#第5回の課題",
    "href": "latex.html#第5回の課題",
    "title": "3  LaTeX 入門",
    "section": "3.4 第5回の課題",
    "text": "3.4 第5回の課題\nMarkdownで以下の問題に対する解答を作成し、解答を記したMarkdownファイル （拡張子が .md）とPDFファイル（拡張子が.pdf）の2つのファイルを提出しなさい。その際、以下の注意を守ること。\n\n第1レベルの見出しを「数理セミナーI：課題5」にしなさい。\n\n見出しの後に氏名と学籍番号を記しなさい。\n\n各問は見出し（第2レベルの見出し）を付けて区別しなさい。\n解答の前に問題文をそのまま書き写しなさい。\n解答には、途中の計算過程も記しなさい。\n\n問と解答は見出し（第3レベルの見出し）を付けて区別しなさい。\n\n提出期限：2023年12月4日（月）午後10時（日本時間）\n提出方法：ファイルをメールに添付して担当教員に送信する\n\nメールの題名：「数理セミナー1の課題5」\n提出するファイル名は kadai5_StudentID.md とkadai5_StudentID.pdf\n\nファイル名のStudentID の部分は自分の学籍番号に置き換えること（例：kadai5_1270999.md）\n\n\n（2023-11-20 追記）\n\n今回はMarkdownファイルのみの提出に変更します。\nVS Code のプレビュー画面で、数式が正しく表示されることを確認してから提出してください。\n数式を含む文書をPDFにする方法は次回の授業で説明します。\n\n\n\n\n\n\n\n\n導関数の定義\n\n\n\n以下の式で表される\\(f'(x)\\)を\\(f(x)\\)の導関数とよぶ。 \\[\nf'(x) = \\lim_{h \\to 0} \\frac{f(x + h) - f(x)}{h}\n\\]\n\n\n\n問1：\\(f(x)\\)が微分可能な関数であるとき、次の極限を\\(a\\)、\\(f(a)\\)、\\(f'(a)\\)を用いて表わせ。\n\n\\(\\displaystyle \\lim_{h \\to 0} \\frac{f(a + 2h) - f(a)}{h}\\)\n\\(\\displaystyle \\lim_{h \\to 0} \\frac{f(a - h) - f(a)}{h}\\)\n\n\n\n問2：つぎの関数\\(y=f(x)\\)の2階までの導関数を求めよ。\n\n\\(\\displaystyle x^4 - 2x^3 + x + 1\\)\n\\(\\displaystyle e^{-x^2}\\)\n\n\n\n問3：つぎの方程式を解きなさい。\n\n\\(\\displaystyle \\log (x -1) + \\log 2 = \\log x\\)\n\\(\\displaystyle \\log_3 x - \\log_9 (x + 2) = 0\\)"
  },
  {
    "objectID": "latex.html#参考文献",
    "href": "latex.html#参考文献",
    "title": "3  LaTeX 入門",
    "section": "3.5 参考文献",
    "text": "3.5 参考文献\nLaTeXについてもっと知りたい者には以下の参考書を勧める。これ1冊あれば、卒業まで困らないはずだ。ただし、2023年12月に改訂第9版が発売予定なので、購入するなら新しい版が出てからにしたほうがよいだろう。\n\n奥村晴彦、黒木裕介. 2020.『[改訂第8版] LaTeX 2\\(\\varepsilon\\) 美文書作成入門』技術評論社."
  },
  {
    "objectID": "overleaf.html#markdown-からpdfへの変換",
    "href": "overleaf.html#markdown-からpdfへの変換",
    "title": "4  Overleafの使い方",
    "section": "4.1 Markdown からPDFへの変換",
    "text": "4.1 Markdown からPDFへの変換\nLaTeX 記法の数式を含むMarkdownファイルは、Pandoc（と LuaLaTeX）を使ってPDFに変換することができる。\n実習のため、課題5（あるいは前回の実習）で作成したMarkdownファイルの内容をPDFに変換してみよう。\nまず、前回作成したファイル（ここでは、kadai5_1270xxx.md としているが、各自のファイル名に置き換えること）をコピーして、eg_lec06.md というファイルを新たに作成し、それをVS Code で開こう。そのために、ターミナル（端末）で以下を実行する。\n$ cd ~/seminar1\n$ cp kadai5_1270xxx.md eg_lec06.md\n$ code eg_lec06.md\nこれをPDFに変換する前に、少し工夫しよう。 PDFにタイトル（およびサブタイトル）と、著者名 (author)、作成日 (date) を表示するために、 ファイルの最上部に以下の情報を書き足す。ただし、author には自分の氏名と学籍番号を書くこと。\n---\ntitle: \"数理マネジメントセミナーⅠ\"\nsubtitle: \"課題5b\"\nauthor: \"矢内 勇生（1270xxx）\"\ndate: \"2023年12月11日\"\n---\nここで書いた、--- （ハイフン3つで1組）で囲まれた部分をYAMLヘッダという。YAMLとは、“YAML Ain’t Markup Language” （YAMLはマークアップ言語ではない）のことであり、ファイルの情報（や構造）を指定するために使う。これをファイルの最上部、すなわちヘッダ (header) に置くのでYAMLヘッダと呼ばれる。\nYAMLヘッダの書き方について注意すべき点を以下に挙げる。\n\nヘッダの開始（最初の、--- ）は、必ずファイルの1行目冒頭におく（改行やスペースを入れない）\nヘッダに記入する各項目の名前（title, subtibleなど）は、半角で記入し、その後にスペース無しで半角のコロン : を入力する\nコロン : の直後に半角スペースを1つ（以上）入れる\n各項目の内容は、半角の引用符 \" で囲む\n項目は1行に1つ\nYAMLヘッダ内に空行（何も記入していない行）を残さない\nヘッダは --- で必ず閉じる\n\nタイトルと氏名はヘッダに書いたので、元々のファイルに書いてあったタイトル、氏名、日付等は削除してもよい。ここまでできたら、ファイルを保存する。\n次に、この Markdown ファイルをPDFをに変換するために、ターミナル（端末）で以下のコードを実行する。ただし、eg_lec06.md は上で編集したファイルのことなので、ファイル名が異なる場合は適宜変更する。同様に、eg_lec06.pdf はこれから作成するファイル名なので、他の名前を付けたい場合は変更する。途中のスペース、記号、大文字と小文字の区別などに注意しながら入力しよう。\n$ pandoc eg_lec06.md -o eg_lec06.pdf --pdf-engine=lualatex -V documentclass=ltjsarticle\nうまくいけば、現在の作業ディレクトリにPDFファイルができる。確認してみよう。 すべてのファイルを表示するなら、\n$ ls\nとすればよいが、PDF（ファイル名拡張子が .pdf のもの）のみを表示するために、以下のようにする。\n$ ls | grep *.pdf\n上で指定した名前のPDFが見つかれば成功である。"
  },
  {
    "objectID": "overleaf.html#overleaf入門",
    "href": "overleaf.html#overleaf入門",
    "title": "4  Overleafの使い方",
    "section": "4.2 Overleaf入門",
    "text": "4.2 Overleaf入門\n簡単な文書であれば、MarkdownをPDFに変換すれば事足りる。しかし、少し複雑な文書を書きたいとき、Markdownだけでは細かい調整が困難な場合がある。そんなときは、LaTeXを直接使うほうが手っ取り早い。しかし、初心者がLaTeXを使いこなすのはやや難しい。そこで、ウェブブラウザ上でLaTeXを利用することができる、Overleafを使うことにしよう。\n\n4.2.1 Overleaf のアカウント登録\nまず、ウェブブラウザ (Firefox) を起動し、Overleaf のサイトを開く。\n次に、無料アカウントの登録を行う。ページの右上にある “Register” をクリックする。Gmail を利用している者は、“Register using Google” で登録することができる。それ以外の者は、EmailとPasswordを入力し、登録する。登録の確認のためにメールを受け取る必要があるので、すぐに開くことができるメールアドレスを入力すること。また、パスワードは忘れないように！\n\n\n4.2.2 Overleaf で日本語文書を作る\n登録が完了したら、さっそく Overleaf を使ってみよう。 左上の “New Project” をクリックするといくつか選択肢が提示されるので、“Blank Project” をクリックして新しいプロジェクト（文書）を作成する。プロジェクトに名前を付けるよう促されるので、適当な名前（例：初めてのOverleaf）を入力し、“Create” をクリックする。\nプロジェクトできると、画面が縦に3分割されたような表示になる。左の列（おそらく一番幅が狭い）は、ファイル一覧で、最初は main.tex というファイルのみが表示されている。真ん中の列（背景が黒い列）がエディタ画面である。ここにファイルの中身が表示されており、ファイルの編集をここで行う。右の列に、ファイルのプレビューが表示されている。最終的にどのようなPDFが出来上がるか、確認することができる。\nプレビューを見てみると、登録した名前（アルファベットで入力した場合）や今日の日付（英語）と、プロジェクト名のうちアルファベットで書いた部分が表示されているだろう。日本語は表示されていないはずだ。これには後で対処する。\n続いて、エディタに注目しよう。LaTeX文書の中身を見てみると、\\begin{document} という命令と、\\end{document} という命令が見つかるだろう。LaTeX記法の数式を勉強したときに見たように、LaTeXでは\\begin{}と\\end{}をペアで利用することで、何らかの環境 (environment) を作る。document 環境は最も基本的な環境であり、LaTeX文書の中身はこのdocument 環境の中、つまり\\begin{document} と\\end{document}の間に書く。\n\\begin{document}よりも上の部分はプレアンブル (preamble) と呼ばれ、ここで文書の構造や、追加で利用するパッケージ（数学記号や図の表示など）を指定する。\n現時点で日本語が表示できないのは、プレアンブルが適切に設定されていないためである。そこで、プレアンブルを以下の内容に置き換えよう。\n\\documentclass[12pt]{ltjsarticle}\n\\usepackage[ipaex]{luatexja-preset}\n\\usepackage[margin=1in]{geometry} % 余白の設定\n\\usepackage{amsmath,amssymb,bm}   % 数学記号を追加\n\\usepackage{graphicx,color}       % 画像の挿入に必要\n\\usepackage{setspace}\n\\doublespacing                    % ダブルスペースにする\n\n\\title{数理セミナーI：第6回}\n\\author{矢内~勇生（1270xxx）}\n\\date{\\today}\nただし、author の内容は、自分の氏名と学籍番号に置き換えること。\nこれだけではまだ日本語が正しく表示されない。 左上にあるMenuをクリックして、Compiler を “pdfLaTeX” から “LuaLaTeX” に変更する。 ここまでできたら、プレビュー画面の上にある “Recompile” をクリックしてみよう。 日本語が表示されるはずだ。\n\n\n4.2.3 Overleaf で LaTeX\nここからは、\\begin{document} と\\end{document}の間に文章を書こう。\n通常の日本語文書は普段通り書けばよい。 ただし、文を改行しても、出来上がった文章で改行されるとは限らない。 段落を変えたいときは、1行空けてから文を書けばよい。\n節タイトルは、\\section{節タイトル} で付ける。 同様に、小節は\\subsection{小節タイトル}、小小節は\n`である。\n太字は\\textbf{太字}で、イタリックは\\textit{italics}で書ける。 文字に色を付けたいときは、\\textcolor{色}{文字}とする。例えば、\\textcolor{red}{この文は赤字になる}のようにする。\nLaTeX記法の数式は以前勉強したが、Markdownの場合とやや異なるところがあるので、以下に違いをいくつか示す。\n\n文中に数式を入れたいときは $ と $ で囲む（これは Markdown と同じ）\n独立行の数式（数式番号なし）は \\[ と\\] で囲む（Markdownでは、$$と$$だった）。たとえば、\n\n\\[\n  \\bar{x} = \\frac{1}{N} \\sum_{n=1}^N x_n\n\\]\nとする。\n\nalign 環境を使うと、番号付きの数式が書ける。たとえば、\n\n\\begin{align}\n  \\bar{x} = \\frac{1}{N} \\sum_{n=1}^N x_n\n\\end{align}\nとすると、数式に自動的に番号が振られる。\n\n数式番号に後で言及したいときは、数式にラベル (label) を付けておくと便利である。たとえば、\n\n\\begin{align}\n  \\bar{x} = \\frac{1}{N} \\sum_{n=1}^N x_n \\label{mean}\n\\end{align}\nとする。この式が (2) だとして、この番号に言及したいときは、「\\eqref{mean}式より〜」と書くと、「(2) 式より〜」と表示される。つまり、カッコ付きの番号が自動的に挿入される。この書き方を利用すると、数式を追加したり削除したりして数式番号が変わったとしても、LaTeXが自動的に正しい番号を挿入してくれる。\n\n数式番号付きで複数行の数式を書きたいときは、次のようにする。\n\n\\begin{align}\n  \\bar{x} \n  &= \\frac{1}{N} \\sum_{n=1}^N x_n \\\\\n  &= \\frac{1}{N} (x_1 + x_2 + \\cdots + x_N)\n\\end{align}\n各行に番号が付される。\n\n数式番号なしで複数行の数式を書きたいときは、次のようにする。\n\n\\begin{align*}\n  \\bar{x} \n  &= \\frac{1}{N} \\sum_{n=1}^N x_n \\\\\n  &= \\frac{1}{N} (x_1 + x_2 + \\cdots + x_N)\n\\end{align*}\nその他の使い方については、参考文献を参照されたい。ウェブ上にも多くの情報があるが、基本的な使い方はTeX Wikiにまとめられている。\n\nOverleafプロジェクトの例"
  },
  {
    "objectID": "overleaf.html#第6回の課題",
    "href": "overleaf.html#第6回の課題",
    "title": "4  Overleafの使い方",
    "section": "4.3 第6回の課題",
    "text": "4.3 第6回の課題\nOverleafで以下の問題に対する解答を作成し、解答を記したPDFファイル （拡張子が .pdf）を提出しなさい。その際、以下の注意を守ること。\n\n文書のタイトルを「数理セミナーI：課題6」にしなさい。\n\nauthor に氏名（学籍番号）を記しなさい。\ndate に作成日を記しなさい。\n\n各問は節タイトルを付けて区別しなさい。\n提出期限：2023年12月18日（月）午後10時（日本時間）\n提出方法：ファイルをメールに添付して担当教員に送信する\n\nメールの題名：「数理セミナー1の課題6」\n提出するファイル名は kadai6_StudentID.pdf\n\nファイル名のStudentID の部分は自分の学籍番号に置き換えること（例：kadai6_1270999.pdf）\n\n\n\n\n問1\n第5回の課題 をOverleaf上で実行しなさい（解答を綺麗に整理すること）。\n\n\n問2\n大学入学後に新たに学習した数学の定理から、あなたが素晴らしい（美しい、役に立つ）と思うものを1つ選び、定理の内容を述べた後、その証明を記しなさい（証明を自力で考える必要はない）。最後に、その定理が素晴らしい（美しい、役に立つ）と思う理由を述べなさい。"
  },
  {
    "objectID": "overleaf.html#参考文献",
    "href": "overleaf.html#参考文献",
    "title": "4  Overleafの使い方",
    "section": "4.4 参考文献",
    "text": "4.4 参考文献\n\n奥村晴彦、黒木裕介. 2020.『[改訂第8版] LaTeX 2\\(\\varepsilon\\) 美文書作成入門』技術評論社.\n奥村晴彦、黒木裕介. 2023.『[改訂第9版] LaTeX 2\\(\\varepsilon\\) 美文書作成入門』技術評論社.\n坂東慶太. 2019.『インストールいらずのLaTeX入門：Overleafで手軽に文書作成』東京図書."
  },
  {
    "objectID": "summary.html#準備",
    "href": "summary.html#準備",
    "title": "5  まとめ",
    "section": "5.1 準備",
    "text": "5.1 準備\nまず、Overleaf で新しいプロジェクトを作り、前回同様、日本語の文書が作成できるように設定する （前回作ったプロジェクトをコピーして新しいプロジェクトを作るほうが簡単）。\n次に、LaTeX文書のプレアンブル（\\begin{document}より上の部分）に以下の2行を加える。\n\\usepackage{hyperref}\n\\usepackage{tikz}\n\n今回の参考プロジェクト"
  },
  {
    "objectID": "summary.html#図の挿入",
    "href": "summary.html#図の挿入",
    "title": "5  まとめ",
    "section": "5.2 図の挿入",
    "text": "5.2 図の挿入\n今後のレポート作成では、図 (figure) や表 (table) を使うことになるだろう。 たとえば、なんらかのデータ分析を行った場合、分析結果を図や表にまとめて整理することで、分析内容を読者に効果的に伝えることできるようになる。\n多くの場合、図は統計分析ソフトで（本学群で「統計学1」の授業を受けると、Rという統計分析言語が使えるようになるので、Rで）図を作り、その図をLaTeXの文書に取り込むことになる。よって、まずは図は既にファイルとして持っていることを想定して、その図をLaTeXに取り込む方法を説明する。練習用の図をココ に置いておくので、ダウンロードして利用されたい。\nOverleafで作成するLaTeXの文書に図を挿入するためには、以下のステップを踏む。\n\n挿入したい図のファイルをOverleafのプロジェクトにアップロードする。\n\n\nここでは、Overleafプロジェクトに figs という名前のフォルダを作り、その中に図のファイルをアップロードすることにする。\n図はPDF形式で用意するのがよい（が、JPEG や PNG でも挿入できる）。\n\n\nLaTeX文書内に図を挿入するための命令を書く。\n\n図を挿入するための基本的な命令は、\nincludegraphics{ファイル名}\nである。例えば、figsフォルダ内にある file1.pdf という名前の図を挿入したいときは、\nincludegraphics{figs/file1.pdf}\nとする。こうすると、元の図の大きさのまま、LaTeX文書に図が挿入される。\n図の大きさを調整したいときは、\nincludegraphics[scale=0.8]{figs/file1.pdf}\nのように[]内で大きさを指定する。scale=x とすると、元の図のx倍の大きさに拡大・縮小される。上の例では0.8倍になる。 あるいは\nincludegraphics[width=0.6\\textwidth]{figs/file1.pdf}\nとすると、図の幅 (width) が文章が表示される幅 (\\textwidth) の0.6倍になる。もちろん、0.6の代わりに好きな数字を選ぶことができる。 文書の幅に合わせるのではなく、特定の単位で幅を決めることもできる。 例えば、\nincludegraphics[width=10cm]{figs/file1.pdf}\nとすれば、図の幅が10cmになる。幅の代わりに図の高さ (height) を指定することもできる。\n上の方法で図を文書に挿入することができるが、図を文章に挿入する際には、図に通し番号を付けるのが文書作成の決まりとなっている。図が複数あるときは、それぞれの図に図1、図2、\\(\\dots\\)という番号を付ける。 文書内に図が1つしかなくても、必ず「図1」という番号を付けなれけばならない。さらに、それぞれの図にはその図の内容を一言で表すタイトル（これを図のキャプション (caption)という）を付ける必要がある。\nこれらのルールを守るために、図 (figure) を挿入するときは、以下のようにする。\n\\begin{figure}\n  \\centering\n  \\includegraphics[scale=0.8\\textwidth]{figs/file3.pdf}\n  \\caption{ファイル1の図の内容を表すタイトルをここに書く}\n  \\label{fig:3f}\n\\end{figure}\n上のコードについて少し説明する。まず、\\begin{figure} と \\end{figure} で囲んだfigure環境で図を挿入する場所を確保する。 次に、\\centering と書くことで、挿入された図が文書の（左寄せではなく）中央に配置されるようにする。その後、\\includegraphics で図のファイルを挿入する。 そして、\\caption で図のタイトルを付ける。これを書くと、図の番号は自動的に割り当てられるので、図の番号を自分で書かなくてもよい（番号を書いてはいけない！）。 最後に、\\label（ラベル）を使って、後でこの図に言及するときにラベルで呼び出せるようにする。このとき、これが図のラベルである（表や式のラベルではない）ことを明確にするため、fig: から始まるラベルを付けるとよいだろう。\n上の方法で複数の図を挿入し、上の例にある図が文書内で3つ目の図だとすると、LaTeXがそれを自動的に「図3」として表示してくれる。図の位置を変えると、たとえば、2つ目の図と3つ目の図の挿入位置を交換すると、通し番号は自動的に「図3」から「図2」に変更されるので、書き手は図の通し番号を気にする必要はない。文中でこの図に言及したいときは、「図~\\ref{fig:3f}は〜〜である」と入力する、「図2は〜〜である」のように正しい図番号とともに出力される。"
  },
  {
    "objectID": "summary.html#tikzを用いた作図",
    "href": "summary.html#tikzを用いた作図",
    "title": "5  まとめ",
    "section": "5.3 TikZを用いた作図",
    "text": "5.3 TikZを用いた作図\n単純な図であれば、TikZ を利用してLaTeXだけで作図することができる。 TikZを使うために、上で\\usepackage{tikz}をプレアンブルに追加した。\n基本的には、\n\\tikz\\draw[-&gt;] (0,1) -- (1, 1);\nのような命令を使って作図する。 上の例は、座標 (0, 1) から (1, 1) まで伸びる矢印 (-&gt;) を描く命令である。 行末にセミコロン ; が必要なので、忘れないようにされたい。\n複数行にわたる命令を書きたいときは、\n\\begin{tikzpicture}[domain=0:4,samples=200,&gt;=stealth]\n  \\draw[-&gt;] (-0.5,0) -- (4.2,0) node[right] {$x$};\n  \\draw[-&gt;] (0,-0.5) -- (0,4.2) node[above] {$y$};\n  \\draw plot (\\x, {sqrt(\\x)}) node[below] {$y=\\sqrt{x}$};\n  \\draw (0,0) node[below left] {O};\n\\end{tikzpicture}\nのように tikzpicure 環境を使う。 これをさらに図 (figure) として使う場合には、figure 環境と合わせて\n\\begin{figure}\n  \\centering\n  \\begin{tikzpicture}[domain=0:4,samples=200,&gt;=stealth]\n    \\draw[-&gt;] (-0.5,0) -- (4.2,0) node[right] {$x$};\n    \\draw[-&gt;] (0,-0.5) -- (0,4.2) node[above] {$y$};\n    \\draw plot (\\x, {sqrt(\\x)}) node[below] {$y=\\sqrt{x}$};\n    \\draw (0,0) node[below left] {O};\n  \\end{tikzpicture}\n  \\caption{ここにキャプションを書く}\n  \\label{ここでラベルを付ける}\n\\end{figure}\nのように利用する。\nTikZの基本的な使い方とその出力例は、今回の参考プロジェクト で確認されたい。また、TikZのさらに詳しい使い方については、あーるえぬ：大学数学のあれこれ を参照。"
  },
  {
    "objectID": "summary.html#第7回の課題",
    "href": "summary.html#第7回の課題",
    "title": "5  まとめ",
    "section": "5.4 第7回の課題",
    "text": "5.4 第7回の課題\nOverleafで以下の問題に対する解答を作成し、解答を記したPDFファイル （拡張子が .pdf）を提出しなさい。その際、以下の注意を守ること。\n\n文書のタイトルを「数理セミナーI：課題7」にしなさい。\n\nauthor に氏名（学籍番号）を記しなさい。\ndate に作成日を記しなさい。\n\n各問は節タイトルを付けて区別しなさい。\n提出期限：2024年1月15日（月）午後10時（日本時間）\n提出方法：ファイルをメールに添付して担当教員に送信する\n\nメールの題名：「数理セミナー1の課題7」\n提出するファイル名は kadai7_StudentID.pdf\n\nファイル名のStudentID の部分は自分の学籍番号に置き換えること（例：kadai7_1270999.pdf）\n\n\n\n\n問1\n\n好きな画像ファイル（数学に関係しないものでも可）を3つ選び、それをOverleafの文書に図 (figure) として挿入しなさい。\nそれぞれの図にキャプションとラベルを付けなさい。\nそれぞれの図の内容を1段落（1つの図につき1段落。合計3段落）で説明しなさい。その際、上で付けたラベルを利用してどの図についての説明かわかるようにしなさい。\n\n\n\n問2\nTikZを利用して、以下のそれぞれの式のグラフを描きなさい。それぞれの図に通し番号（4から6まで）と適切なキャプションを付けること。\n\n\\(y = x^2 - 4x + 3 \\qquad(-1 \\leq x \\leq 5)\\)\n\\(\\displaystyle y=\\frac{x}{x^2 + 1} \\qquad(-5 \\leq x \\leq 5)\\)\n\\((x - 3)^2 + (y + 2)^2 = 9\\)"
  }
]